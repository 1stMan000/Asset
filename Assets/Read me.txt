The NPC has many script components inside. These are:
Character Stats
NPC
Attacked Take Damage
Attacked Scrolling Text
On Death Ragdoll

Class CharacterStats is for handling the status of the npc. These are the following variables that are used.
MaxHealth : Maximum health of the npc. It is assigned to the currentHealth on Start.
CurrentHealth : Actual health of the npc currently. If reaches 0 npc will be considered dead. Damage is given from void TakeDamage(GameObject attacker, float damage) method inside class CharacterStats.
Armour : Reduces damage. Used by CreateAttack(CharacterStats attacker, CharacterStats defender, bool bashAttack = false) method inside class AttackDefinition.
IsDead : If true npc it means the npc is dead. You can use it to indicate if an npc has been killed.

Class NPC is where the npc Ai is done. The script is a state machine which changes the behaviour of the npc by changing the states. It's required to be used with Character stats. 
Idle, walk, run is obtained in one blend tree. The animations change depending on the velecoty.magnitude of the navmeshagent.
Every update() the npc checks if all npcs near it has been attacked. If it finds out if one one of them are attacked it will change to the scared state and run for it's life.
It is considered as the first priority above all states. These are the values you can change for it
MovementSpeed : The normal movment speed of the npc.
Scared Running Speed : The speed of the npc when it has detected an attack.
Running distance : How much distance the npc will run when it has detected an attack.
RunningTime : How much long the npc will be in the scared state before it changes back to it's origninal state.

Every state will go back to the idle state once it's finished. Once in the idle state the npc will automatically goto work or head home,
depending on the time given by the Class DayAndNightControl. The GoToWork() and GoHome() method is executed. If a work script is assigned the npc will load that script once
it reaches where it is assigned to work. 
Work Script : Can attach a script here that will load when the npc reaches it's workplace.

Each npc has a capsule collider that covers the areas near it. It is placed inside the root gameobject. Everytime two of the diffrent colliders collide the npc will randomly choose to have a conversation.
ConverChoose : How likely the npc will have a conversation. Calculated per frame.
Conversations will be chosen depending both of the two npc's job and gender.
Job : The npcs job. You can add more jobs inside the Class Enum. Inside there is a public enum that stores all jobs.
Gender : Gender of the npc. You can add changes to it in the same way as the Job variable.

The conversations are stored inside a specific file and chosen from there when it is needed. To intialize to the path where the conversations are stored, Class TextLoader is used attached to a gameobject
inside the scene. In the sample scene it is attached to the text manager gameobject. There is a public variable named Path inside the text loader which should be assigned the following
Path : Assign the path to the folder where the conversations are loaded. For instance in the sample scene it is "Assets/NPC dialogues/npc-npc dialogues".

The NPC component has variables you can alter:
NPC Name
Vision Range
Vision Layers(What layers the npc can see)
Age
Job(Used to choose which interaction to play)
Gender(Used to choose which interaction to play)
Home(Where the NPC will go for the night)
Work(Where the NPC will go for the day)
Current State(Current state of the NPC)
Movement & Running variables
Work Script(Script that executes when the NPC is in the 'work' state)
Conver Choose (How likely the NPC will start a conversation. Per frame) 

To see how to add in new conversations go to NPC dialogues/npc-npc dialogues

To get support ask questions in our forums: https://1stmanleader.wixsite.com/website/forum